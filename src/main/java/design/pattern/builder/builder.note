整个程序编写完毕，而且简洁明了，这就是建造者模式，中间有几个角色需要说明一下：

1、Client 就是牛叉公司，这个到具体的应用中就是其他的模块或者页面；

2、CarModel 以及两个实现类BenzModel 和BMWModel 叫做产品类(Product Class)，
这个产品类实现了模板方法模式，也就是有模板方法和基本方法，这个参考上一节的模板方法模式；

3、【1】****CarBuilder 以及两个实现类BenzBuilder 和BMWBuilder 叫做建造者(Builder Class) ****【1】，
在上面的那个例子中就是我和我的团队，负责建造Benz 和BMW 车模，按照指定的顺序；

4、Director 类叫做导演类(Director Class),负责安排已有模块的顺序，然后告诉Builder 开始建造，在上面的例子中就是我们的老大，
Client 找到老大，说我要这个，这个，那个类型的车辆模型，然后老大就把命令传递给我，我和我的团队就开始拼命的建造，于是一个项目建设完毕了。

大家看到这里估计就开始犯嘀咕了，这个建造者模式和工厂模式非常相似呀，Yes，是的，是非常相似，但是记住一点你就可以游刃有余的使用了：
【2】****建造者模式最主要功能是基本方法的调用顺序安排，也就是这些基本方法已经实现了；而工厂方法则重点是创建，****【2】
你要什么对象我创造一个对象出来，组装顺序则不是他关心的。

建造者模式使用的场景，一是产品类非常的复杂，或者产品类中的调用顺序不同产生了不同的效能，这个时候使用建造者模式是非常合适，
我曾在一个银行交易类项目中遇到了这个问题，一个产品的定价计算模型有N多种，每个模型有固定的计算步骤，计算非常复杂，项目中就使用了建造者模式；
二是“在对象创建过程中会使用到系统中的一些其它对象，这些对象在产品对象的创建过程中不易得到”，这个是我没有遇到过的，创建过程中不易得到？那为什么在设计阶段不修正这个问题，创建的时候都不易得到耶！
